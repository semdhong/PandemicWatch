@page "/cases"
@inject HttpClient http
@inject IJSRuntime js
@inject NavigationManager navmgr
<center><h3>Cases</h3></center>
<br />

<input type="text" placeholder="Search Name" size="50" @bind-value="SearchTerm" @bind-value:event="oninput" /> &nbsp; &nbsp; Showing @FilteredName.Count out of @person.Count
<br />
<br />
<a class="btn btn-success" href="/cases/create">Create New</a>
<br />

@if (person == null)
{
    <p><em>Loading...</em></p> }
else
{
    <div class="col-10">
        <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="20"
                    AllowSorting="true" Data="@person" TItem="PersonProfilesModel" ColumnWidth="200px">
            <Columns>

                <RadzenGridColumn TItem="PersonProfilesModel" Property="Fullname" Title="Fullname" />
                <RadzenGridColumn TItem="PersonProfilesModel" Property="Barangay.BarangayName" Title="Barangay" />
                <RadzenGridColumn TItem="PersonProfilesModel" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px">
                    <Template Context="person">
                        <RadzenButton Icon="edit" Size="ButtonSize.Medium" Click="@(args =>  EditRow(person))">
                        </RadzenButton>
                    </Template>
                </RadzenGridColumn>


            </Columns>
        </RadzenGrid>
    </div>
}

@code {

    List<PersonProfilesModel> person = new List<PersonProfilesModel>();
    string SearchTerm { get; set; } = "";

    IEnumerable<PersonProfilesModel> persons;

    protected override async Task OnInitializedAsync()
    {
        await LoadBarangays();

    }

    async Task LoadBarangays()
    {
        person = await http.GetJsonAsync<List<PersonProfilesModel>>("https://localhost:44326/api/Person");

    }
    void EditRow(PersonProfilesModel person)
    {
        navmgr.NavigateTo("/cases/edit/" + person.Id);
    }

    List<PersonProfilesModel> FilteredName => person.Where(i => i.Fullname.ToLower().Contains(SearchTerm.ToLower())).ToList();
}