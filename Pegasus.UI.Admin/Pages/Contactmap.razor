
@page "/personmap/{personId:int}"
@inject HttpClient http
@inject NavigationManager navmgr
<h3>Contact Tracing</h3>

<div class="pg-orgchart">
    <div class="org-chart">
        <ul>
            <li>
                <!--Positive Person-->
                <div class="user">
                    <RadzenImage Path="css/images/positiveperson.png" Style="width:100px;" />
                    <div class="name">@principalpersonsmodel.Fullname</div>
                    <Radzen.Blazor.RadzenLabel>Confirmed COVID-19 Positive</Radzen.Blazor.RadzenLabel>

                </div>
                @if (contactpersonsmodel != null)
                {

                <ul>
                    @foreach (var direct in contactpersonsmodel)
                    {

                        GetSecondLevel(direct.Id);
                    <li>
                        <div class="user">
                           
                            <RadzenImage Path="css/images/positiveperson.png" Style="width:100px;" />
                            <div class="name">@direct.Fullname</div>
                            


                        </div>
                       @if (secondperson != null)
                       {
                        <ul>
                            <li>
                                <div class="user">
                                    <a href="/personmap/@secondperson.Id">
                                        <RadzenImage Path="css/images/positiveperson.png" Style="width:100px;" />
                                        <b>@secondperson.Fullname</b>
                                    </a>

                                </div>
                            </li>
                           
                        </ul>}
                    </li>
                   
                    }
                </ul>
                }
            </li>
        </ul>
    </div>
</div>
@code{
    [Parameter] public int personId { get; set; }
    List<PersonProfilesModel> contactpersonsmodel = new List<PersonProfilesModel>();
    PersonProfilesModel principalpersonsmodel = new PersonProfilesModel();
    PersonProfilesModel secondperson = new PersonProfilesModel();
    List<PersonProfilesModel> allpersonsmodel = new List<PersonProfilesModel>();

    protected async override Task OnParametersSetAsync()
    {
        contactpersonsmodel = await http.GetJsonAsync<List<PersonProfilesModel>>($"https://pegasusapiadmin.azurewebsites.net/api/Contacts/" + personId);
        principalpersonsmodel = await http.GetJsonAsync<PersonProfilesModel>($"https://pegasusapiadmin.azurewebsites.net/api/Person/" + personId);
        allpersonsmodel = await http.GetJsonAsync<List<PersonProfilesModel>>($"https://pegasusapiadmin.azurewebsites.net/api/Person/");
    }

     void GetSecondLevel(int id)
    {
        secondperson = allpersonsmodel.FirstOrDefault(x => x.PrincipalPersonId == id);
    }
}