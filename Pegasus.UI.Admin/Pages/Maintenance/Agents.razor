<h3>Agents</h3>
@page "/maintenance/brgy"
@inject HttpClient http
@inject IJSRuntime js

<a class="btn btn-success" href="/agents/create">Create New</a>
<br />

@if (person == null)
{
    <p><em>Loading...</em></p> }
else
{
    <div class="col-10">
        <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="20"
                    AllowSorting="true" Data="@person" TItem="PersonProfilesModel" ColumnWidth="200px">
            <Columns>

                <RadzenGridColumn TItem="PersonProfilesModel" Property="Fullname" Title="Fullname" />
                <RadzenGridColumn TItem="PersonProfilesModel" Property="Barangay.BarangayName" Title="Barangay" />
                <RadzenGridColumn TItem="PersonProfilesModel" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px">
                    <Template Context="person">
                        <RadzenButton Icon="edit" Size="ButtonSize.Medium" Click="@(args =>  EditRow(person))">
                        </RadzenButton>
                    </Template>
                </RadzenGridColumn>


            </Columns>
        </RadzenGrid>
    </div>
}

@code {
    List<AgentModel> agentmodel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadAgents();
    }

    async Task LoadAgents()
    {
        //agentmodel = await http.GetJsonAsync<List<AgentModel>>("https://pegasusapiadmin.azurewebsites.net/api/Barangay");
        agentmodel = await http.GetJsonAsync<List<AgentModel>>("https://localhost:44399/api/Agent");




    }


}
