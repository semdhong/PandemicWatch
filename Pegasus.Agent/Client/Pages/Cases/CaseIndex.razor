@page "/cases"
@attribute [Authorize]
@inject HttpClient http
@inject IJSRuntime js

@inject NavigationManager navmgr

<center><h1>Cases</h1></center>

@if (person == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="col-12">

        <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="20"
                    AllowSorting="true" Data="@person" TItem="PersonProfilesModel" ColumnWidth="200px">
            <Columns>

                <RadzenGridColumn TItem="PersonProfilesModel" Property="CaseNo" Title="CaseNo" />
                <RadzenGridColumn TItem="PersonProfilesModel" Property="Age" Title="Age" />
                <RadzenGridColumn TItem="PersonProfilesModel" Property="Gender" Title="Sex" />
                <RadzenGridColumn TItem="PersonProfilesModel" Filterable="false" Property="Barangay.BarangayName" Title="Barangay" />
                <RadzenGridColumn TItem="PersonProfilesModel" Filterable="false" Property="DateLabConfirm" Title="Laboratory Confirmation" />
                <RadzenGridColumn TItem="PersonProfilesModel" Filterable="false" Property="History.Remarks" Title="History/Status" />
                <RadzenGridColumn TItem="PersonProfilesModel" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px">
                    <Template Context="person">
                        <RadzenButton Icon="edit" Size="ButtonSize.Medium" Click="@(args =>  EditRow(person))">
                        </RadzenButton>
                        <RadzenButton Icon="person_search" Size="ButtonSize.Medium" Click="@(args =>  ViewContact(person))">
                        </RadzenButton>
                    </Template>
                </RadzenGridColumn>
            </Columns>
        </RadzenGrid>
    </div>

}


@code {

    List<PersonProfilesModel> person = new List<PersonProfilesModel>();


    protected override async Task OnInitializedAsync()
    {
        await LoadBarangays();
    }

    async Task LoadBarangays()
    {
        person = await http.GetFromJsonAsync<List<PersonProfilesModel>>("https://pegasusapiagent.azurewebsites.net/api/Person");

    }
    void EditRow(PersonProfilesModel person)
    {
        navmgr.NavigateTo("/cases/edit/" + person.Id);
    }
    void ViewContact(PersonProfilesModel person)
    {
        navmgr.NavigateTo("/cases/contactedperson/" + person.Id);
    }

}
